//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.SocialSimRos
{
    [Serializable]
    public class SceneInfoMsg : Message
    {
        public const string k_RosMessageName = "unity_sim/SceneInfo";
        public override string RosMessageName => k_RosMessageName;

        //  Message containing the parameters for Unity Scene trials
        public HeaderMsg header;
        public string scenario_name;
        //  Which scene we are running
        public Geometry.PoseMsg robot_start_pose;
        //  Pose of robot start location
        public Geometry.PoseMsg robot_target_pose;
        //  Pose of robot target location
        public ushort num_people;
        //  Number of people in scene
        public ushort num_groups;
        //  Number of groups in scene
        public string environment;
        //  Which environment

        public SceneInfoMsg()
        {
            this.header = new HeaderMsg();
            this.scenario_name = "";
            this.robot_start_pose = new Geometry.PoseMsg();
            this.robot_target_pose = new Geometry.PoseMsg();
            this.num_people = 0;
            this.num_groups = 0;
            this.environment = "";
        }

        public SceneInfoMsg(HeaderMsg header, string scenario_name, Geometry.PoseMsg robot_start_pose, Geometry.PoseMsg robot_target_pose, ushort num_people, ushort num_groups, string environment)
        {
            this.header = header;
            this.scenario_name = scenario_name;
            this.robot_start_pose = robot_start_pose;
            this.robot_target_pose = robot_target_pose;
            this.num_people = num_people;
            this.num_groups = num_groups;
            this.environment = environment;
        }

        public static SceneInfoMsg Deserialize(MessageDeserializer deserializer) => new SceneInfoMsg(deserializer);

        private SceneInfoMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.scenario_name);
            this.robot_start_pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.robot_target_pose = Geometry.PoseMsg.Deserialize(deserializer);
            deserializer.Read(out this.num_people);
            deserializer.Read(out this.num_groups);
            deserializer.Read(out this.environment);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.scenario_name);
            serializer.Write(this.robot_start_pose);
            serializer.Write(this.robot_target_pose);
            serializer.Write(this.num_people);
            serializer.Write(this.num_groups);
            serializer.Write(this.environment);
        }

        public override string ToString()
        {
            return "SceneInfoMsg: " +
            "\nheader: " + header.ToString() +
            "\nscenario_name: " + scenario_name.ToString() +
            "\nrobot_start_pose: " + robot_start_pose.ToString() +
            "\nrobot_target_pose: " + robot_target_pose.ToString() +
            "\nnum_people: " + num_people.ToString() +
            "\nnum_groups: " + num_groups.ToString() +
            "\nenvironment: " + environment.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
